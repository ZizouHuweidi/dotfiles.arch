#!/usr/bin/env bash

# Script name: dmconf
# Description: Choose from a list of configuration files to edit.
# Dependencies: dmenu
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# Contributors: Derek Taylor

# READER="kitty -e zathura"
READER="kitty -e zathura"

# An array of options to choose.
# You can edit this list to add/remove config files.
declare -a options=(
	"The Holy Quran - $HOME/Documents/books/deen/Holy_Quran_Full.pdf"
	"The Sealed Nectar - $HOME/Documents/books/deen/English_ArRaheeq_AlMakhtum_THE_SEALED_NECTAR.pdf"
	"Al Nawawi 40 Hadith - $HOME/Documents/books/deen/al-nawawi.pdf"
	"Al Ghazali - $HOME/Documents/books/deen/Al-Ghazalis_Philosophical_Theology_by_Frank_Griffel.pdf"
	"Intro to Algos - $HOME/Documents/books/tech/programming/dsa/intro-to-algorithms.pdf"
	"Designing Data Intensive Application - $HOME/Documents/books/tech/backend/distributed/ddia.pdf"
	"Distributed Services With Go - $HOME/Documents/books/tech/backend/distributed/distributed-services-with-go.pdf"
	"Cloud Native Programming with Go - $HOME/Documents/books/tech/backend/distributed/cloud-native-programming-with-golang.epub"
	"Writing an interpreter in Go - $HOME/Documents/books/tech/compilers/writing-an-interpreter-in-go.epub"
	"Writing a compiler in Go - $HOME/Documents/books/tech/compilers/writing-a-compiler-in-go.pdf"
	"The Pragmatic Programmer - $HOME/Documents/books/tech/programming/The-Pragmatic-Programmer.pdf"
	"Mastering Kubernetes - $HOME/Documents/books/tech/devops/kubernetes/mastering-kubernetes.pdf"
	"Networking and Kubernetes - $HOME/Documents/books/tech/devops/kubernetes/networking-and-kubernetes.pdf"
	# "quit"
)

# Piping the above array into dmenu.
# We use "printf '%s\n'" to format the array one item to a line.
choice=$(printf '%s\n' "${options[@]}" | wofi --show dmenu -i 20 -p 'Choose Book')

# What to do when/if we choose 'quit'.
if [[ "$choice" == "quit" ]]; then
	echo "Program terminated." && exit 1

# What to do when/if we choose a file to edit.
elif [ "$choice" ]; then
	cfg=$(printf '%s\n' "${choice}" | awk '{print $NF}')
	$READER "$cfg"

# What to do if we just escape without choosing anything.
else
	echo "Program terminated." && exit 1
fi
